"""modify schemas

Revision ID: a5076663ba4e
Revises: 
Create Date: 2025-10-11 21:30:52.393773

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'a5076663ba4e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_groups',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('auth_users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_users_email'), 'auth_users', ['email'], unique=True)
    op.create_index(op.f('ix_auth_users_id'), 'auth_users', ['id'], unique=False)
    op.create_index(op.f('ix_auth_users_username'), 'auth_users', ['username'], unique=True)
    op.create_table('auth_user_groups',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('group_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['auth_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('credits',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('credits', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'user_id')
    )
    op.create_table('juridical_queries',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('query_type', sa.String(length=10), nullable=False),
    sa.Column('query_value', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.Enum('queued', 'running', 'done', 'failed', name='querystatus'), nullable=True),
    sa.Column('result_process_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_juridical_queries_query_value'), 'juridical_queries', ['query_value'], unique=False)
    op.create_table('crawl_tasks_log',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('query_id', sa.BigInteger(), nullable=True),
    sa.Column('tribunal', sa.String(length=16), nullable=True),
    sa.Column('status', sa.Enum('running', 'done', 'failed', name='crawlstatus'), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['query_id'], ['juridical_queries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crawl_tasks_log_query_id'), 'crawl_tasks_log', ['query_id'], unique=False)
    op.create_table('juridical_processes',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('query_id', sa.BigInteger(), nullable=True),
    sa.Column('crawl_task_log_id', sa.BigInteger(), nullable=True),
    sa.Column('tribunal', sa.Enum('trf1', 'trf2', 'trf3', 'trf4', 'trf5', 'trf6', name='tribunal'), nullable=True),
    sa.Column('process_number', sa.String(length=20), nullable=False),
    sa.Column('last_crawl_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_json', mysql.LONGBLOB(), nullable=True),
    sa.Column('distribution_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['crawl_task_log_id'], ['crawl_tasks_log.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['query_id'], ['juridical_queries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_juridical_processes_crawl_task_log_id'), 'juridical_processes', ['crawl_task_log_id'], unique=False)
    op.create_index(op.f('ix_juridical_processes_process_number'), 'juridical_processes', ['process_number'], unique=False)
    op.create_index(op.f('ix_juridical_processes_query_id'), 'juridical_processes', ['query_id'], unique=False)
    op.create_table('juridical_attachments',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('process_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('file_md5', sa.String(length=64), nullable=True),
    sa.Column('file_b64', mysql.LONGBLOB(), nullable=True),
    sa.Column('protocol_md5', sa.String(length=64), nullable=True),
    sa.Column('protocol_b64', mysql.LONGBLOB(), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['juridical_processes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_juridical_attachments_process_id'), 'juridical_attachments', ['process_id'], unique=False)
    op.create_table('juridical_movements',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('process_id', sa.BigInteger(), nullable=True),
    sa.Column('idx', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('document_ref', sa.String(length=255), nullable=True),
    sa.Column('document_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['juridical_processes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_juridical_movements_process_id'), 'juridical_movements', ['process_id'], unique=False)
    op.create_table('juridical_parties',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('is_active_party', sa.Boolean(), nullable=False),
    sa.Column('process_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['juridical_processes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_juridical_parties_process_id'), 'juridical_parties', ['process_id'], unique=False)
    op.create_table('juridical_party_documents',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('party_id', sa.BigInteger(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('value', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['party_id'], ['juridical_parties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_juridical_party_documents_party_id'), 'juridical_party_documents', ['party_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_juridical_party_documents_party_id'), table_name='juridical_party_documents')
    op.drop_table('juridical_party_documents')
    op.drop_index(op.f('ix_juridical_parties_process_id'), table_name='juridical_parties')
    op.drop_table('juridical_parties')
    op.drop_index(op.f('ix_juridical_movements_process_id'), table_name='juridical_movements')
    op.drop_table('juridical_movements')
    op.drop_index(op.f('ix_juridical_attachments_process_id'), table_name='juridical_attachments')
    op.drop_table('juridical_attachments')
    op.drop_index(op.f('ix_juridical_processes_query_id'), table_name='juridical_processes')
    op.drop_index(op.f('ix_juridical_processes_process_number'), table_name='juridical_processes')
    op.drop_index(op.f('ix_juridical_processes_crawl_task_log_id'), table_name='juridical_processes')
    op.drop_table('juridical_processes')
    op.drop_index(op.f('ix_crawl_tasks_log_query_id'), table_name='crawl_tasks_log')
    op.drop_table('crawl_tasks_log')
    op.drop_index(op.f('ix_juridical_queries_query_value'), table_name='juridical_queries')
    op.drop_table('juridical_queries')
    op.drop_table('credits')
    op.drop_table('auth_user_groups')
    op.drop_index(op.f('ix_auth_users_username'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_id'), table_name='auth_users')
    op.drop_index(op.f('ix_auth_users_email'), table_name='auth_users')
    op.drop_table('auth_users')
    op.drop_table('auth_groups')
    # ### end Alembic commands ###
